
module Writeback_Stage_tb;
   logic clk;
   logic reset;
	logic wre;
	logic [4:0] a1, a2, a3;
	logic [15:0] wd3;
	
	logic [15:0] rd1, rd2, rd3;


	Regfile_scalar regfile_instance (
		.clk(clk),
		.wre(wre_writeback),
		.a1(instruction_decode[4:0]),
      .a2(instruction_decode[9:5]),
      .a3(rd_writeback),
      .wd3(writeback_data),
      .rd1(rd1),
      .rd2(rd2),
      .rd3(rd3)
	);
	Regfile_vector vector_instance (
		.clk(clk),
		.wre(vector_wre_writeback),
		.a1(instruction_decode[4:0]),
      .a2(instruction_decode[9:5]),
      .a3(rd_writeback),
		.wd3(writeback_vector),
		.rd1(vector_rd1),   // Read data 1
		.rd2(vector_rd2),   // Read data 2
		.rd3(vector_rd3)   // Read data 3
	);
	
	   always #10 clk = ~clk;
   initial begin
      reset = 1;
      #20 reset = 0;
		wre = 1'b1;
		a1 = 4'b0001;
		a2 = 4'b0001;
		a3 = 4'b0001;
		wd3 = 16'b1;
      #100;
      $finish;
   end
endmodule

